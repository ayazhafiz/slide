dist: bionic

language: rust
cache: cargo

jobs:
  fast_finish: true

  include:
    - name: "Stable"
      if: type != pull_request
      rust: stable
      env: CHANNEL="stable"
    - name: "Beta"
      if: type != pull_request
      rust: beta
      env: CHANNEL="beta"
    - name: "Nightly"
      if: type != pull_request
      rust: nightly
      env: CHANNEL="nightly"

    - name: "Squashed commits"
      if: type = pull_request
      env: BRANCH="origin/$TRAVIS_PULL_REQUEST_BRANCH"
      script:
        - git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
        - git fetch origin
        - scripts/squashed

    - name: "Linux release"
      if: tag IS present
      rust: stable
      os: linux
      env: CHANNEL="stable"
    - name: "MacOS release"
      if: tag IS present
      rust: stable
      os: osx
      env: CHANNEL="stable"

  allow_failures:
    - rust: nightly

script:
  # Ensure slide builds
  - cargo build --verbose --all
  - scripts/check test
  - rustup component add clippy || cargo install --git
    https://github.com/rust-lang/rust-clippy/ --force clippy
  - rustup component add rustfmt
  - scripts/check lintformat
  # Ensure fuzzer builds
  - pushd slide/fuzz
  - cargo build
  - popd

after_success:
  - |
    if [ "$TRAVIS_BRANCH" == "master" ]; then
      if [ "$CHANNEL" == "stable" ]; then
        export DEPLOY_DOCS=1
        cargo doc --document-private-items
      elif [ "$CHANNEL" == "nightly" ]; then
        export DEPLOY_UI=1
        curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
        scripts/build_wasm
        rm www/js/.gitignore
        rm www/js/package.json
        OLD_COMMIT_TAG=$([[ $(cat www/index.html) =~ slide/commit/([a-zA-Z0-9]*) ]] && \
                         echo ${BASH_REMATCH[1]})
        COMMIT_TAG=$(git log --format=%h -1)
        sed -i '' "s/$OLD_COMMIT_TAG/$COMMIT_TAG/g" www/index.html
      fi
    fi
    if [ ! -z "$TRAVIS_TAG" ] && [ "$TRAVIS_PULL_REQUEST" == "false" ]; then
      cargo build --release
      if [ "$TRAVIS_OS_NAME" = "linux" ]; then
        mv target/release/slide slide-x86_64-linux
        export DEPLOY_FILE="slide-x86_64-linux"
      else
        mv target/release/slide slide-x86_64-apple-darwin
        export DEPLOY_FILE="slide-x86_64-apple-darwin"
      fi
    fi

  - cargo doc --document-private-items --no-deps

deploy:
  # Documentation
  - provider: pages:git
    edge: true
    token: $GITHUB_TOKEN
    target_branch: gh-pages
    keep_history: true
    verbose: true
    local_dir: target/doc
    fqdn: slide-dev.ayazhafiz.com
    project_name: slide
    name: slide-bot
    email: vcaa1729@gmail.com
    committer_from_gh: true
    deployment_file: true
    on:
      branch: master
      condition: $DEPLOY_DOCS = 1
  # Web UI
  - provider: pages:git
    edge: true
    token: $GITHUB_TOKEN
    repo: yslide/yslide.github.io
    target_branch: master
    keep_history: true
    verbose: true
    local_dir: www/
    project_name: slide
    name: slide-bot
    email: vcaa1729@gmail.com
    committer_from_gh: true
    deployment_file: true
    on:
      branch: master
      condition: $DEPLOY_UI = 1
  # Binary releases
  - provider: releases
    edge: true
    token: $GITHUB_TOKEN
    file: $DEPLOY_FILE
    on:
      tags: true
    run: ./scripts/publish
