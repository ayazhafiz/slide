name: Fuzz

on:
  schedule:
    - cron:  '0 */6 * * *'

jobs:
  fuzz:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.SLIDE_WORKFLOWS_TOKEN }}
          repository: 'yslide/slide'
          ref: 'master'

      - name: Update fuzz files
        run: |
          scripts/seed_fuzz
          git config --global user.name 'slide-bot'
          git config --global user.email '49662722+slide-bot@users.noreply.github.com'
          git add -A
          git commit -m "[fuzz update] Ensure fuzz seed files" || true
          git push --force || true

      - name: Cache Rust
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/sccache
            ~/.cargo
            ~/.rustup
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          default: true

      - name: My sweatshirt is also fuzzy, can we fix that?
        id: run
        run: |
          cargo install cargo-fuzz
          cd slide
          EC="$(cargo fuzz run slide -- fuzz/corpus/ fuzz/seed -runs=500000 &> out.slide || echo $?)"
          FUZZ_OUT="$(cat out.slide | tail -30)"
          RE_CRASH_FILE="(fuzz/artifacts/slide/crash-[0-9a-zA-Z]+)"
          if [[ "$FUZZ_OUT" =~ $RE_CRASH_FILE ]]; then
            FILE="${BASH_REMATCH[1]}"
            DL_CASE="$(curl --upload-file "$FILE" https://transfer.sh/hello.txt)"
            FUZZ_OUTPUT="$(curl --upload-file "out.slide" https://transfer.sh/fuzz-output.txt)"
          fi
          JSON="$(jq -cn \
                --arg ec "$EC" \
                --arg out "$FUZZ_OUT" \
                --arg dl_case "$DL_CASE" \
                --arg fuzz_out "$FUZZ_OUTPUT" \
                '{ec: $ec, fuzz_out: $out, dl_case: $dl_case, fuzz_out: $fuzz_out}')"
          echo "::set-output name=matrix::$JSON"

      - name: Create issue
        if: ${{ fromJson(steps.run.outputs.matrix).ec != '' }}
        uses: maxkomarychev/oction-create-issue@v0.7.1
        with:
          token: ${{ secrets.SLIDE_WORKFLOWS_TOKEN }}
          owner: yslide
          repo: slide
          title: "Fuzzing failure"
          body: |
            Daily slide fuzzing failed. Last 30 lines of the output log are as follows:

            ```
            ${{ fromJson(steps.run.outputs.matrix).out }}
            ```

            Download this test case at ${{ fromJson(steps.run.outputs.matrix).dl_case }}

            [Command run output][1]

            [Fuzz output][2]

            [1]: https://github.com/yslide/slide/actions/runs/${{ github.run_id }}
            [2]: ${{ fromJson(steps.run.outputs.matrix).fuzz_out }}
